services:
  broker-service:
    build:
      context: ./broker-service
      dockerfile: ./broker-service.dockerfile
    restart: always
    ports:
      - "8081:80"
    deploy:
      mode: replicated
      replicas: 1

  logger-service:
    build:
      context: ./logger-service
      dockerfile: ./logger-service.dockerfile
    restart: always
    ports:
      - "8082:80"
    deploy:
      mode: replicated
      replicas: 1

  authentication-service:
    build:
      context: ./authentication-service
      dockerfile: ./authentication-service.dockerfile
    restart: always
    ports:
      - "8083:8080"
    deploy:
      mode: replicated
      replicas: 1
    environment:
      DSN: "host=postgres port=5432 user=postgres password=password dbname=users sslmode=disable timezone=UTC connect_timeout=5"
    networks:
      - auth-network

  postgres:
    image: "postgres:17.0-alpine"
    ports:
      - "5432:5432"
    restart: always
    deploy:
      mode: replicated
      replicas: 1
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
      POSTGRES_DB: users
    volumes:
      - ./_projects/db-data/postgres/:/var/lib/postgresql/data/
    networks:
      - auth-network

  mongo:
    image: "mongo:8.0.3-noble"
    ports:
      - "27017:27017"
    environment:
      MONGO_INITDB_DATABASE: logs
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: password
    volumes:
      - ./_projects/db-data/mongo/:/data/db
      # Add this to remove containers and images when done

networks:
  auth-network:
    driver: bridge
